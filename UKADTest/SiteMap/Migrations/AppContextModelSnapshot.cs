// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SiteMap;

namespace SiteMap.Migrations
{
    [DbContext(typeof(AppContext))]
    partial class AppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SiteMap.Models.SiteMapUrl", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AccessMS")
                        .HasColumnType("float");

                    b.Property<string>("SiteMapUrlString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("URLID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("URLID");

                    b.ToTable("SiteMapUrls");
                });

            modelBuilder.Entity("SiteMap.Models.URL", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("URLs");
                });

            modelBuilder.Entity("SiteMap.Models.SiteMapUrl", b =>
                {
                    b.HasOne("SiteMap.Models.URL", "URL")
                        .WithMany("siteMapUrls")
                        .HasForeignKey("URLID");
                });
#pragma warning restore 612, 618
        }
    }
}
